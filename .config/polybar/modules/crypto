#!/usr/bin/env bash

#--: Binance
#------------------------------------------------------------------------------
# Cur=${1:-BTCUSDT|ETHUSDT|AVAXUSDT|SEIUSDT|AAVEUSDT|ARBUSDT}
# Api=https://api.binance.com/api/v1/ticker/price
# Api=https://fapi.binance.com/fapi/v1/ticker/price
#------------------------------------------------------------------------------
#--: KuCoin
# Cur=${1:-BTC-USDT|ETH-USDT|SNX-USDT|AVAX-USDT|ARB-USDT|VANRY-USDT}
# Api=https://api.kucoin.com/api/v1/market/allTickers
# Cur=${1:-XBTUSDTM|ETHUSDTM|SNXUSDTM|AVAXUSDTM|ARBUSDTM|SEIUSDTM}
# Api=https://api-futures.kucoin.com/api/v1/contracts/active
#------------------------------------------------------------------------------
#--: MEXC
# Cur=${1:-BTC_USDT|ETH_USDT|SNX_USDT|AVAX_USDT|ARB_USDT|VANRY_USDT}
# Api=https://www.mexc.com/open/api/v2/market/ticker
# Api=https://contract.mexc.com/api/v1/contract/ticker
#------------------------------------------------------------------------------
#--: Bybit
# Cur=${1:-BTCUSDT|ETHUSDT|AVAXUSDT|SNXUSDT|ARBUSDT}
# Api="https://api.bybit.com/v5/market/tickers?category=spot"
# Api="https://api.bybit.com/v5/market/tickers?category=linear"
#------------------------------------------------------------------------------
#--: Gate.io
Cur=${1:-BTC_USDT|ETH_USDT|SNX_USDT|AVAX_USDT|ARB_USDT|VANRY_USDT}
Api=https://api.gateio.ws/api/v4/spot/tickers
# Api=https://api.gateio.ws/api/v4/futures/usdt/contracts
# Fiat=USDT

shopt -s nocasematch extglob

if [[ $Api == */api.binance* ]]; then
	Exchange=Binance
elif [[ $Api == */fapi.binance* ]]; then
	Exchange=BinanceF
elif [[ $Api == */api.kucoin* ]]; then
	Exchange=KuCoin
elif [[ $Api == */api-futures.kucoin* ]]; then
	Exchange=KuCoinF
elif [[ $Api == */www.mexc* ]]; then
	Exchange=MEXC
elif [[ $Api == */contract.mexc* ]]; then
	Exchange=MEXCF
elif [[ $Api == */api.bybit.*spot ]]; then
	Exchange=Bybit
elif [[ $Api == */api.bybit.*linear ]]; then
	Exchange=BybitF
elif [[ $Api == */api.gateio.*spot* ]]; then
	Exchange=Gateio
elif [[ $Api == */api.gateio.*futures* ]]; then
	Exchange=GateioF
fi

read -r _ _ Monitor <<< "$(xset q | tail -n1)"
[ "$Monitor" = Off ] && exit

tickers() {
	if [[ $Exchange == Binance* ]]; then
		curl -s "$Api" | jq -r '.[] | (.symbol + " " + .price)'
	elif [ "$Exchange" = KuCoin ]; then
		curl -s "$Api" | jq -r '.data.ticker[] | (.symbol + " = " + .last)'
	elif [ "$Exchange" = KuCoinF ]; then
		curl -s "$Api" | jq -r '.data[] | .symbol + " = " + (.lastTradePrice|tostring)'
	elif [ "$Exchange" = MEXC ]; then
		curl -s "$Api" | jq -r '.data[] | .symbol + " = " + .last'
	elif [ "$Exchange" = MEXCF ]; then
		curl -s "$Api" | jq -r '.data.[] | .symbol + " = " + (.lastPrice|tostring)'
	elif [[ $Exchange == Bybit* ]]; then
		curl -s "$Api" | jq -r '.result.list[] | .symbol + " = " + .lastPrice'
	elif [ "$Exchange" = Gateio ]; then
		curl -s "$Api" | jq -r '.[] | .currency_pair + " = " + .last'
	elif [ "$Exchange" = GateioF ]; then
		curl -s "$Api" | jq -r '.[] | .name + " = " + .last_price'
	fi 2>/dev/null
}

while read -ra Rate; do
	if [[ ${Rate[*]} =~ ^($Cur)[[:space:]].*$ ]]; then
		if [[ $Exchange == Binance* ]]; then
			Coin=${Rate[0]%USDT}
			Price=${Rate[1]}
		else
			Coin=${Rate[0]%%@(-|_|)USDT}
			Coin=${Coin/%%@(-|_)/\/B}
			[ "$Exchange" = KuCoinF ] && Coin=${Coin%USDTM}
			Price=${Rate[2]}
		fi

		[[ $Price == *.* ]] && Price=${Price%%+(0)}
		[[ $Price =~ ^0.* ]] && Price=.${Price#0.}

		Rates+=("$(printf '%s = %8s\n' "$Coin" "${Price%.}")")
	fi
done < <(tickers)

BG='%{B#bb406769}'
BG_Alt='%{B#bb076678}'
# BG='%{B#375355}'
# BG_Alt='%{B#0D5361}'

if [ "$Exchange" = Binance ]; then
	AL='%{A3:xdg-open https\://www.binance.com/en/trade/'
	AR='?layout=pro\&theme=dark\&type=spot:}'
elif [ "$Exchange" = BinanceF ]; then
	AL='%{A3:xdg-open https\://www.binance.com/en/futures/'
	AR=':}'
elif [ "$Exchange" = KuCoin ]; then
	AL='%{A3:xdg-open https\://www.kucoin.com/trade/'
	AR=':}'
	SEP=-
elif [ "$Exchange" = KuCoinF ]; then
	AL='%{A3:xdg-open https\://www.kucoin.com/futures/trade/'
	AR=':}'
	SEP=-
	SUF=M
elif [ "$Exchange" = MEXC ]; then
	AL='%{A3:xdg-open https\://www.mexc.com/exchange/'
	AR=':}'
	SEP=_
elif [ "$Exchange" = MEXCF ]; then
	AL='%{A3:xdg-open https\://futures.mexc.com/exchange/'
	AR='?type=linear_swap:}'
	SEP=_
elif [ "$Exchange" = Bybit ]; then
	AL='%{A3:xdg-open https\://www.bybit.com/en/trade/spot/'
	AR=':}'
elif [ "$Exchange" = BybitF ]; then
	AL='%{A3:xdg-open https\://www.bybit.com/trade/usdt/'
	AR=':}'
elif [ "$Exchange" = Gateio ]; then
	AL='%{A3:xdg-open https\://www.gate.io/trade/'
	AR=':}'
	SEP=_
elif [ "$Exchange" = GateioF ]; then
	AL='%{A3:xdg-open https\://www.gate.io/futures/USDT/'
	AR=':}'
	SEP=_
fi

while read -r Index; do
	[ -z "$Index" ] && break

	[ "$Exchange" = Bybit ] && Fiat=/USDT
	[ -z "${Rates[1]}" ] && printf '%s%s %s %s%s' \
		"$AL${Index%% =*}$SEP${Fiat:-USDT}$SUF$AR" "$BG" "${Index##*= }" "%{B-}" "%{A}" && break

	printf '%s%s %s %s%s ' "$AL${Index%% =*}$SEP${Fiat:-USDT}$SUF$AR" "$BG" "$Index" "%{B-}" "%{A}"
	read -r Index
	[ -n "$Index" ] && printf '%s%s %s %s%s ' \
		"$AL${Index%% =*}$SEP${Fiat:-USDT}$SUF$AR" "$BG_Alt" "$Index" "%{B-}" "%{A}"
done < <(printf '%s\n' "${Rates[@]}" | sort -grk3)

