#!/usr/bin/env bash

# Binance
Cur=${1:-BTCUSDT|ETHUSDT|AVAXUSDT|SEIUSDT|AAVEUSDT|ARBUSDT}
Api=https://api.binance.com/api/v1/ticker/price
# Api=https://fapi.binance.com/fapi/v1/ticker/price
# MEXC
# Cur=${1:-BTC_USDT|ETH_USDT|MATIC_USDT|AVAX_USDT|WLD_USDT|SEI_USDT}
# Api=https://contract.mexc.com/api/v1/contract/ticker
# Api=https://www.mexc.com/open/api/v2/market/ticker
# Fiat=USDT

shopt -s nocasematch extglob

if [[ $Api == */api.binance* ]]; then
	Exchange=Binance
elif [[ $Api == */fapi.binance* ]]; then
	Exchange=BinanceF
elif [[ $Api == */www.mexc* ]]; then
	Exchange=MEXC
elif [[ $Api == */contract.mexc* ]]; then
	Exchange=MEXCF
fi

read _ _ Monitor <<<$(xset q | tail -n1)
[ "$Monitor" = Off ] && exit

while read -ra Rate; do
	if [[ ${Rate[*]} =~ ^($Cur)($Fiat)[[:space:]].*$ ]]; then
		if [[ $Exchange == Binance* ]]; then
			Coin=${Rate[0]%USDT}
			Price=${Rate[1]}
		else # MEXC
			Coin=${Rate[0]%_USDT}
			Coin=${Coin/%_BTC/\/B}
			Price=${Rate[2]}
		fi

		[[ $Price == *.* ]] && Price=${Price%%+(0)}
		[[ $Price =~ ^0.* ]] && Price=.${Price#0.}

		Rates+=("$(printf '%s = %8s\n' "$Coin" "${Price%.}")")
	fi
done < <(
	if [[ $Exchange == Binance* ]]; then
		curl -s $Api | jq -r '.[] | (.symbol + " " + .price)'
	elif [ "$Exchange" = MEXC ]; then
		curl -s $Api | jq -r '.data[] | .symbol + " = " + .last'
	elif [ "$Exchange" = MEXCF ]; then
		curl -s $Api | jq -r '.data.[] | .symbol + " = " + (.lastPrice|tostring)'
	fi 2>/dev/null
)

BG='%{B#bb406769}'
BG_Alt='%{B#bb076678}'
# BG='%{B#375355}'
# BG_Alt='%{B#0D5361}'

if [ "$Exchange" = Binance ]; then
	AL='%{A3:xdg-open https\://www.binance.com/en/trade/'
	AR='?layout=pro\&theme=dark\&type=spot:}'
elif [ "$Exchange" = BinanceF ]; then
	AL='%{A3:xdg-open https\://www.binance.com/en/futures/'
	AR=':}'
elif [ "$Exchange" = MEXC ]; then
	AL='%{A3:xdg-open https\://www.mexc.com/exchange/'
	AR=':}'
elif [ "$Exchange" = MEXCF ]; then
	AL='%{A3:xdg-open https\://futures.mexc.com/exchange/'
	AR='?type=linear_swap:}'
fi

while read -r Index; do
	[ -z "$Index" ] && break

	[ -z "${Rates[1]}" ] && printf '%s%s %s %s%s' \
		"$AL${Index%% =*}_${Fiat:-USDT}$AR" "$BG" "${Index##*= }" "%{B-}" "%{A}" && break

	printf '%s%s %s %s%s ' "$AL${Index%% =*}_${Fiat:-USDT}$AR" "$BG" "$Index" "%{B-}" "%{A}"
	read -r Index
	[ -n "$Index" ] && printf '%s%s %s %s%s ' \
		"$AL${Index%% =*}_${Fiat:-USDT}$AR" "$BG_Alt" "$Index" "%{B-}" "%{A}"
done < <(printf '%s\n' "${Rates[@]}" | sort -grk3)
