#!/bin/sh
#
# ~/.config/aliasrc
#

alias cp='cp -i'
alias mkdir='mkdir -pv'
alias mv='timeout 8 mv -i'
alias rm='timeout 3 rm -I --one-file-system'
alias df='df -h'
alias info='info --vi-keys'
alias mktree='tree -a -I .git > TREE'
alias v='$EDITOR'
alias SS='sudo systemctl'
alias f='$FILE'
alias ka='killall'
alias g='git'
alias x='sxiv -ft *'
alias ncmpcpp='pkill -0 mpd || mpd && ncmpcpp'
alias ffmpeg='ffmpeg -hide_banner'
alias ssh='TERM=xterm-256color ssh'
alias magit='nvim -c MagitOnly'
alias ncdu='ncdu --color dark'
alias newsboat='newsboat -q'
alias wb='$BROWSER'

command -v nvim >/dev/null && alias vim='nvim' vimdiff='nvim -d' # Use neovim if installed.

alias ls='ls --group-directories-first --time-style=+"%Y-%m-%d %H:%M" --color=auto -F'
alias ll='ls -l --group-directories-first --time-style=+"%Y-%m-%d %H:%M" --color=auto -F'
alias la='ls -lah --group-directories-first --time-style=+"%Y-%m-%d %H:%M" --color=auto -F'

alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias diff='diff --color=auto'
alias ccat='highlight --out-format=ansi' # Color cat - print file with syntax highlighting.

alias cdr='. ranger'

# Package Management
alias upd='yay -Syu'
alias updw='sudo pacman -Syyuw'
alias lsp='pacman -Qett --color=always | less'
alias p='sudo pacman'
alias pac='sudo pacman -S --needed'
alias pacu='sudo pacman -U'
alias pacs='pacman -Ss'
alias pacr='sudo pacman -Rns'
alias paci='pacman -Si'
alias pacqi='pacman -Qi'
alias paclf='pacman -Ql'
alias pacc='sudo pacman -Sc'
alias paclu='sudo pacman -Qu'
alias pacgen=' pacman -Q'
alias pacgenaur='pacman -Qm'
alias paclog='less +G /var/log/pacman.log'
alias lorph='pacman -Qdt'
alias rmorph='sudo pacman -Rns $(pacman -Qtdq)'
alias paclmir='less /etc/pacman.d/mirrorlist'
alias pacnew='sudo pacdiff'
alias pkglistin='sudo pacman -S --needed - <'
alias pkglist='pacman -Qqen > pkglist_$(date +%F) && pacman -Qm > pkglist-aur_$(date +%F) && pacman -Qqn > pkglist_full_$(date +%F)'

# Maintanance
alias cleanb=' clear && truncate -s 0 $HISTFILE && exec $SHELL'
alias cleansysd='sudo journalctl --vacuum-size=50M'
alias sysdan='systemd-analyze time && systemd-analyze blame'
alias grubup='sudo grub-mkconfig -o /boot/grub/grub.cfg'
alias resnet='sudo systemctl restart NetworkManager.service'
alias sysj='journalctl -p 3 -xb'
alias sysjf='journalctl -f'
alias sysf='systemctl --failed'
alias sysl='systemctl list-unit-files'
alias ws='watch sensors'

# Others
alias _='sudo'
alias q=' exit'
alias rtop='top -o RES'
alias sue='sudoedit'
alias gitc='git clone'
alias mkpkg='makepkg -srci'
alias mksrci='makepkg --printsrcinfo > .SRCINFO'
alias xrdbu='xrdb ~/.Xresources'
alias didi='sudo dd bs=4M oflag=sync status=progress'
alias lspath='echo -e ${PATH//:/\\n}'
alias ys='ssh yusuf@34.82.93.240'
alias publicip='curl ifconfig.me'
localip() { ip -o addr show scope global | awk '{split($4, a, "/"); print a[1]}' ;}
sx() { exec startx "$XINITRC" "$@" -- -quiet > ~/.cache/Xorg.log 2>&1 ;}

# Configured to run without password:
alias ps_mem='sudo ps_mem'
alias updatedb='sudo updatedb'

# YouTube
alias yt='youtube-dl --add-metadata -i' # Download video link
alias yta='yt -x -f bestaudio/best' # Download only audio
alias YT='youtube-viewer'

clipcopy() {
	if command -v xclip >/dev/null; then
		[ -z "$1" ] && xclip -in -selection clipboard || xclip -selection clipboard "$@"
	elif command -v xsel >/dev/null; then
		[ -z "$1" ] && xsel --clipboard --input || xsel --clipboard --input < "$@"
	else
		printf "clipcopy: xclip/xsel not installed\n" >&2
		return 1
	fi
}

clippaste() {
	if command -v xclip >/dev/null; then
		xclip -out -selection clipboard
	elif command -v xsel >/dev/null; then
		xsel --clipboard --output
	else
		printf "clipcopy: xclip/xsel not installed\n" >&2
		return 1
	fi
}

copydir() { printf '%s' "$PWD" | clipcopy ;}
copyfile() { clipcopy "$@" ;}

mkd() { mkdir -p "$@" && cd "${@:$#}" ;}

histopen() { $EDITOR + "$HISTFILE" ;}

ranger() {
	[ -z "$RANGER_LEVEL" ] && /usr/bin/ranger "$@" || \
		echo "Shell is already running inside ranger!"
}

rpeat() {
	n=$1
	shift
	while [ $(( n -= 1 )) -ge 0 ]
	do
		"$@"
		sleep 3
	done
}

vf() { fzf | xargs -r -I % $EDITOR % ;}

wttr() { curl -s wttr.in/"${1:-}" ;}
