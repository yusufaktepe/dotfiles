" vim: filetype=vifm :

" Use vim as default editor, open multiple files in tabs
set vicmd='$EDITOR -p'

" Update terminal title
set title

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
set trash

" Only confirm permdelete
set confirm-=delete

" This is how many directories to store in the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
" set fastrun

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.
set norunexec

" Color scheme
colorscheme custom

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt=%Y-%m-%d\ %H:%M

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Do not consider dot(46) as part of a word (in command-line)
set wordchars=1-8,14-31,33-45,47-255

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,delay,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Don't wrap long lines in preview pane
set nowrap

" Expand tabulation characters as two spaces
set tabstop=4

" Hide .. directory everywhere
set dotdirs=

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
	set slowfs=curlftpfs
endif

" Display only last directory in tab line
set shortmess+=L

" Custom ruler format
set rulerformat='%2l-%S%[ +%x%]'

" Set custom status line look
set statusline=" %t%= %A %10u:%-7g %8E %20d "

" Controls what will be saved in the $VIFM/vifminfo file
set vifminfo=bmarks,bookmarks,tui,dhistory,state,savedirs,chistory,shistory,
	\phistory,fhistory,dirstack,registers,tabs

" An equivalent of 'vifminfo' for sessions
set sessionoptions=tui,dhistory,state,savedirs,chistory,shistory,
	\phistory,fhistory,dirstack,tabs

" Specifies identifier for group of instances that share registers
set syncregs=1

" Customize view columns a bit (enable ellipsis for truncated file names)
set viewcolumns=-{name}..,6{}.

" Hide side borders
set tuioptions-=s

if $TERM != 'linux'
	" use Unicode ellipsis
	set tuioptions+=u
endif

" Ignore .git directory on :find
set findprg='find %s %a -print ,
	\ -type d \( ! -readable -o ! -executable -o -path "*/.git" \)
	\ -prune'

" Filter-out build and temporary files
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}

" Use ag (the silver searcher) instead of grep
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
let $VIFM_SERVER_NAME = v:servername

" Show info on right prompt, if shell is spawned by vifm
let $RPS1 = '-- VIFM --'

" ------------------------------------------------------------------------------
" Autocmds

au DirEnter /tmp,**/.cache,**/downloads/default,**/.torrent-files,**/videos/mov,
	\**/pictures/**/**,**/pkglists,**/share/pacman/**/**
	\ setlocal sort=-mtime | setlocal viewcolumns=-{name}..,6{size}.,18{mtime}

" ------------------------------------------------------------------------------
" Source configs

source $VIFM/conf.d/commands.vifm
source $VIFM/conf.d/mappings.vifm
source $VIFM/conf.d/handler.vifm
source $VIFM/conf.d/icons.vifm
source $VIFM/conf.d/bookmarks.vifm

" ------------------------------------------------------------------------------
" Initialize default session
" if v:session == ''
" 	session default
" endif

