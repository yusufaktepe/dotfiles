# interpreter for shell commands (needs to be POSIX compatible)
set shell sh

set previewer ~/.config/lf/scope

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type $f -b) in
        text/troff) man $f;;
        text/*) $EDITOR $fx;;
        image/x-xcf) setsid gimp $f >/dev/null 2>&1 & ;;
        image/svg+xml) setsid inkscape $f >/dev/null 2>&1 & ;;
        image/*) sxivr $f -o | lf-select & ;;
        audio/*) mpvc $f ;;
        video/*) mpvc $f ;;
        application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
# cmd trash %set -f; mv $fx ~/.trash
cmd trash %trash-put $fx

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ $ans = "y" ] && rm -rf $fx
# }}

cmd moveto ${{
    set -f
    clear; echo "Move to where?"
    dest="$(fzf < $HOME/.config/dir.list | awk '{print $2}' | sed 's|~|$HOME|g')" &&
    eval mv -iv $fx $dest &&
    notify-send -a system "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
    set -f
    clear; echo "Copy to where?"
    dest="$(fzf < $HOME/.config/dir.list | awk '{print $2}' | sed 's|~|$HOME|g')" &&
    eval cp -ivr $fx $dest &&
    notify-send -a system "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# bulk rename with $EDITOR
cmd bulkrename ${{
    vidir
}}

## Bindings

# use enter for shell commands
map <enter> shell
# execute current file (must be executable)
map x $$f
map X !$f
# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

map a push %mkdir<space>
map r push :rename<space>
map b bulkrename
map R $lf -remote "send $id push :rename<space>$f"

map C copyto
map M moveto
map D trash
map <delete> delete

map <c-f> $lf -remote "send $id select '$(fzf)'"
map c $lf -remote "send $id cd $(fzf < $HOME/.config/dir.list | awk '{print $2}' | sed 's|~|$HOME|g')"
map J $lf -remote "send $id cd $(fzf < $HOME/.config/dir.list | awk '{print $2}' | sed 's|~|$HOME|g')"
