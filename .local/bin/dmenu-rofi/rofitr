#!/bin/sh
# Translate text using rofi.
# Requires: rofi, crow-translate
# ---
# 2019 Yusuf Aktepe <yusuf@yusufaktepe.com>
# https://github.com/yusufaktepe/dotfiles
# ---
# Usage:
#       > source:target text
#             de:en hallo
#       > :target text
#               :es hello world!
#
#   If you leave source empty, it'll identify the source
#   and translate it into :target.
#   If you leave both empty, default variables will be used.
# ---

SOURCE="en"
TARGET="tr"
TRHIST="$XDG_DATA_HOME/rofi/translate.hist"

rofi_cmd() { rofi -dmenu -p "ï†« translate" -l 0 -width 60 -yoffset 0 -font "Hack 10" "$@" ;}

[ -n "$*" ] && input="$*" || input="$(rofi_cmd)"

while [ -n "$input" ]; do
	crow_cmd() {
		case "$input" in
			??:??*)
				SOURCE=$(echo "$input" | awk -F':' '{print $1}')
				TARGET=$(echo "$input" | awk -F'[:| ]' '{print $2}')
				input=$(echo "$input" | cut -d' ' -f2-)
				crow -s "$SOURCE" -t "$TARGET" "$input" ;;
			:??*)
				TARGET=$(echo "$input" | awk -F'[:| ]' '{print $2}')
				input=$(echo "$input" | cut -d' ' -f2-)
				crow -t "$TARGET" "$input" ;;
			*)	crow -s "$SOURCE" -t "$TARGET" "$input" ;;
		esac
	}

	result="$(crow_cmd | sed '/- examples:/Q;/^$/d;s/\&/\&amp\;/g')"
	[ -n "$TRHIST" ] && printf '\n#===[__%s__]==#\n\n%s\n' "$(date)" "$result" >> "$TRHIST"
	input="$(rofi_cmd -mesg "<span color='#ebdbb2'>$result</span>")"
done
