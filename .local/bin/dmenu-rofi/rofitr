#!/usr/bin/env sh
# Translate text using rofi.
# Requires: rofi, crow-translate
# ---
# 2019 Yusuf Aktepe <yusuf@yusufaktepe.com>
# https://github.com/yusufaktepe/dotfiles
# ---
# Usage:
#       > source:target text
#             de:en hallo
#       > :target text
#               :es hello world!
#       > !e word
#         show examples for "word"
#       > !!
#         show last translation
#       > !!e
#         show examples for last translation
#       > !
#         to select and translate from history
#       > !d
#         to select and remove from history
#         >> !dd
#            to clear history
#
#   If you leave source empty, it'll identify the source
#   and translate it into :target.
#   If you leave both empty, default variables will be used.
# ---

# Default values
SOURCE="${SOURCE:-en}"
TARGET="${TARGET:-tr}"
ENGINE="${ENGINE:-google}"
LOCALE="${LOCALE:-${LANG%_*}}"
# History file
HIST="${XDG_DATA_HOME:-~/.local/share}/rofi/$(basename "$0")_history"
# Rofi options
FONT="mono 10"
WIDTH="60"
YOFFSET="0"
HIST_LINES="15"
RES_LINES="43"
PROMPT_TR=" translate"
PROMPT_HIST=" history"
PROMPT_DEL=" delete"
COLOR_RESULT="#ebdbb2"

rofi_cmd() { rofi -dmenu -width "$WIDTH" -yoffset "$YOFFSET" -font "$FONT" "$@" ;}

[ -n "$*" ] && input="$*" || input="$(rofi_cmd -p "$PROMPT_TR" -l 0)"

while [ -n "$input" ]; do
	case "$input" in
		!)	input="$(tac "$HIST" | rofi_cmd -p "$PROMPT_HIST" -l "$HIST_LINES")"
			[ "$input" = "!" ] && input="$(rofi_cmd -p "$PROMPT_TR" -l 0)" ;;
		!!)	input=$(tail -n1 "$HIST") ;;
		!!e)	input=$(printf "!e %s" "$(tail -n1 "$HIST")") ;;
		!d)	pattern="$(tac "$HIST" | rofi_cmd -p "$PROMPT_DEL" -l "$HIST_LINES")"
			case "$pattern" in
				!) input="$(rofi_cmd -p "$PROMPT_TR" -l 0)" ;;
				!dd) printf '' > "$HIST" && exit 0 ;;
				"") exit 0 ;;
				*) sed -i "/^$pattern$/d" "$HIST"
			esac ;;
		*)
			cleanup() {
				sedit="s/^[\t]$//;/^$/d;s/\&/\&amp\;/g"
				case "$1" in
					ex) sed -e "$sedit" -ne '/- examples:/,$p' | head -n $RES_LINES ;;
					*) sed -e "$sedit" -e '/- examples:/Q' | sed -z 's/\n/ /' | head -n $RES_LINES
				esac
			}

			case "$input" in
				??:??*)
					SOURCE=$(echo "$input" | awk -F':' '{print $1}')
					TARGET=$(echo "$input" | awk -F'[:| ]' '{print $2}')
					input=$(echo "$input" | cut -d' ' -f2-)
					result=$(crow -e "$ENGINE" -l "$LOCALE" -s "$SOURCE" -t "$TARGET" "$input" | cleanup) ;;
				:??*)
					TARGET=$(echo "$input" | awk -F'[:| ]' '{print $2}')
					input=$(echo "$input" | cut -d' ' -f2-)
					result=$(crow -e "$ENGINE" -l "$LOCALE" -t "$TARGET" "$input" | cleanup) ;;
				!e*)
					input=$(echo "$input" | cut -d' ' -f2-)
					result=$(crow -e "$ENGINE" -l "$LOCALE" "$input" | cleanup ex) ;;
				*)	result=$(crow -e "$ENGINE" -l "$LOCALE" -s "$SOURCE" -t "$TARGET" "$input" | cleanup) ;;
			esac

			sed -i "/^$input$/d" "$HIST" && printf '%s\n' "$input" >> "$HIST"
			input="$(rofi_cmd -p "$PROMPT_TR" -l 0 -mesg "<span color='$COLOR_RESULT'>$result</span>")"
	esac
done
